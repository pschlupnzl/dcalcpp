#include <iostream>
#include <cstring>
#include <tuple>
#include <vector>
#include "../calc/CCalculate.h"
#include "../calc/TToken.h"
#include "../calc/eAction.h"
#include "../calc/types.h"
#include "actionFromCmd.h"

typedef std::tuple<const char*, const char*, const char*> testCase_t;

const std::vector<testCase_t> numberCases = {
    { "1", "1", "1" },
    { "1 2", "12", "12" },
    { "1 2 3 . 4", "123.4", "123.4" },
    { "1 2 3 . 4 5", "123.45", "123.45" },
    { "1 2 3 . 4 5 9", "123.459", "123.459" },
    { "1 2 3 . 4 5 6", "123.456", "123.456" },
    { ". 1", "0.1", "0.1" },
    { "1 + 2", "1 + 2", "3" },
    { "1 - 2", "1 - 2", "-1" },
    { "1 + 2 * 3", "1 + 2 * 3", "7" },
    { "1 ±", "-1", "-1" },
    { "± 1", "-1", "-1" }, // neg can precede a number, too
    { "2 . 5", "2.5", "2.5" },
    { "1 ± ±", "1", "1" },
    { "2 ± / 4 ±", "-2 / -4", "0.5" },
    { "1 + ± 2", "1 + -2", "-1" },
    { "1 . 2 ± 3", "-1.23", "-1.23" },
    { "1 + 2", "1 + 2", "3" },
    { "1 + 2 . 3 / 4", "1 + 2.3 / 4", "1.575" },
    { "( 1", "( 1", "1" },
    { "( 1 )", "( 1 )", "1" },
    { "1 + 2 * 3", "1 + 2 * 3", "7" },
    { "( 1 + 2 ) * 3", "( 1 + 2 ) * 3", "9" },
    { "9 * 2 + 3", "9 * 2 + 3", "21" },
    { "( 9 * 2 ) + 3", "( 9 * 2 ) + 3", "21" },
    { "9 * ( 2 + 3 )", "9 * ( 2 + 3 )", "45" },
    { "9 * ( 2 + 3", "9 * ( 2 + 3", "45" }, // auto-close bracket
    { "1 2 * 3 4", "12 * 34", "408" },
    { "1 + ( 2 - 3 ± )", "1 + ( 2 - -3 )", "6" },
    { 
      "1 + ( 3 - 5 ) / ( 1 3 - 8 )",
      "1 + ( 3 - 5 ) / ( 13 - 8 )",
      "0.6",
     },
    { 
      "1 + ( 2 - 3 ± ) / ( 4 ± - 5 )",
      "1 + ( 2 - -3 ) / ( -4 - 5 )",
      "0.444444444444444",
     },
    { "( 1 + 2 ) * 3", "( 1 + 2 ) * 3", "9" },
    { 
      "1 - ( 3 + 4 ) ^ ( 5 + 6 )",
      "1 - ( 3 + 4 ) ^ ( 5 + 6 )",
      "-1977326742" // (1 - Math.pow(7, 11)).toString(),
     },
    { "sqrt ( 4 )", "sqrt ( 4 )", "2" }, // TS: V -> sqrt
    { "1 0 / 2 * 5", "10 / 2 * 5", "25" },
    { "1 0 * 5 / 2", "10 * 5 / 2", "25" },

    { "2 ^2", "2^2", "4" },
    { "3 ^2", "3^2", "9" },
    { "4 . 5 ^2", "4.5^2", "20.25" },
    { "1 _ 2 ^2", "1_2^2", "1_4" },
    { "1 _ 2 _ 3 ^2", "1_2_3^2", "2_7_9" },

    { "sqrt ( 4", "sqrt(4)", "2" },
    { "sqrt ( ± 4", "sqrt(-4)", "nan" },
    { "sqrt ( 4 _ 9 )", "sqrt(4_9)", "2_3" },
    { "sqrt ( 0 . 0 6 2 5 )", "sqrt(0.0625)", "0.25" },
    { "sqrt ( 1 0 0", "sqrt(100)", "10" },

    { "sin ( 4 5 ) ^ 2", "sin(45)^2", "0.5" },
    { "sin ( 4 5 ) ^2", "sin(45)^2", "0.5" },
};

const std::vector<testCase_t> fractionCases = {
  { "3 _ 4", "3_4", "3_4" },
  { "1 _ 3 _ 4", "1_3_4", "1_3_4" },
  { "1 _ 3 _ 4 ±", "-1_3_4", "-1_3_4" },
  { "1 _ 3 ± _ 4 ±", "1_3_4", "1_3_4" },
  { "1 _ 2 + 1 _ 3", "1_2 + 1_3", "5_6" },

  { "1 _ 2 * 1 _ 2", "1_2 * 1_2", "1_4" },
  { "± 1 _ 2 * 1 _ 2", "-1_2 * 1_2", "-1_4" },
  { "1 _ 2 * 1 ± _ 2", "1_2 * -1_2", "-1_4" },
  { "1 _ 2 ± * 1 ± _ 2", "-1_2 * -1_2", "1_4" },

  { "1 _ 2 / 1 _ 3", "1_2 / 1_3", "1_1_2" },
  { "± 1 _ 2 / 1 _ 3", "-1_2 / 1_3", "-1_1_2" },
  { "1 _ 2 / ± 1 _ 3", "1_2 / -1_3", "-1_1_2" },

  { "5 6 * 1 2 _ 4 / 4", "56 * 12_4 / 4", "42_0_1" }, // TS: 42_0_16
  { "5 6 * 1 2 _ 4 / 4 ±", "56 * 12_4 / -4", "-42_0_1" }, // TS: -42_0_16
  { "5 6 * 3 _ 4 / 4", "56 * 3_4 / 4", "10_1_2" },
  { "4 9 ^ 1 _ 2", "49 ^ 1_2", "7" },

  { "3 _ 4 _ 5", "3_4_5", "3_4_5" },
  { "3 _ 1 4 _ 5", "3_14_5", "5_4_5" },
  { "3 _ 4 _ 2", "3_4_2", "5_0_1" }, // TS: 5_0_2
  { "3 _ 5 _ 7", "3_5_7", "3_5_7" },
  { "3 _ ± 5", "-3_5", "-3_5" },
  { "3 _ 5 ±", "-3_5", "-3_5" },
  { "± 3 _ 5", "-3_5", "-3_5" },
  { "± 3 ± _ ± 5 ±", "3_5", "3_5" },
  { "1 * 2 _ 3", "1 * 2_3", "2_3" },
  { "1 _ 2 / 3", "1_2 / 3", "1_6" },
  { "1 _ 2 * 3 _ 4", "1_2 * 3_4", "3_8" },
  { "1 _ 2 / 3 _ 4", "1_2 / 3_4", "2_3" },

  { "1 _ 2 + 3 _ 4 _ 5", "1_2 + 3_4_5", "4_3_10" },
  { "1 _ 2 * 3 _ 4 + ( 5 / 7 _ 8 _ 9 )", "1_2 * 3_4 + ( 5 / 7_8_9 )", "1_5_568" },
  { "2 0 0 _ 1 0 / 1 0 * 3 _ 5", "200_10 / 10 * 3_5", "1_1_5" },

  { "1 - 1 _ 2", "1 - 1_2", "1_2" },
  { "1 + 1 _ 2", "1 + 1_2", "1_1_2" },
  { "1 _ 2 + 1 _ 2", "1_2 + 1_2", "1_0_1" }, // TS: 1_0_4
  { "1 _ 2 - 1 _ 2", "1_2 - 1_2", "0_1" }, // TS: 0_4
  { "1 - 1 _ 2", "1 - 1_2", "1_2" },
  { "2 _ 5 - 3 _ 5", "2_5 - 3_5", "-1_5" },
  { "1 _ 3 - 1", "1_3 - 1", "-2_3" },
  { "1 + 1 _ 2 ±", "1 + -1_2", "1_2" },
  { "1 - 1 _ 2 ±", "1 - -1_2", "1_1_2" },

  { "3 _ 5 + 2 _ 5", "3_5 + 2_5", "1_0_1" }, // TS: 1_0_25
  { "3 _ 5 + 2 ± _ 5", "3_5 + -2_5", "1_5" },
  { "3 ± _ 5 + 2 _ 5", "-3_5 + 2_5", "-1_5" },
  { "3 ± _ 5 + 2 ± _ 5", "-3_5 + -2_5", "-1_0_1" }, // TS: -1_0_25

  { "3 _ 5 - 2 _ 5", "3_5 - 2_5", "1_5" },
  { "3 _ 5 - 2 ± _ 5", "3_5 - -2_5", "1_0_1" }, // TS: 1_0_25
  { "3 ± _ 5 - 2 _ 5", "-3_5 - 2_5", "-1_0_1" }, // TS: -1_0_25
  { "3 ± _ 5 - 2 ± _ 5", "-3_5 - -2_5", "-1_5" },

  { "3 _ 5 * 2 _ 5", "3_5 * 2_5", "6_25" },
  { "3 _ 5 * 2 ± _ 5", "3_5 * -2_5", "-6_25" },
  { "3 ± _ 5 * 2 _ 5", "-3_5 * 2_5", "-6_25" },
  { "3 ± _ 5 * 2 ± _ 5", "-3_5 * -2_5", "6_25" },

  { "3 _ 5 / 2 _ 5", "3_5 / 2_5", "1_1_2" },
  { "3 _ 5 / 2 ± _ 5", "3_5 / -2_5", "-1_1_2" },
  { "3 ± _ 5 / 2 _ 5", "-3_5 / 2_5", "-1_1_2" },
  { "3 ± _ 5 / 2 ± _ 5", "-3_5 / -2_5", "1_1_2" },

  { "9 ^ ( 1 _ 2 )", "9 ^ ( 1_2 )", "3" },
  { "9 ^ ( 1 _ 2 ± )", "9 ^ ( -1_2 )", "0.333333333333333" },

  { "8 ^ ( 1 / 3 )", "8^(1/3)", "2" },
};

const std::vector<testCase_t> trigCases = {
  { "cos ( 9 0 )", "cos ( 90 )", "6.12323399573677e-17" },
  { "sin ( 1 8 0 )", "sin ( 180 )", "1.22464679914735e-16" },
  { "acos ( 0 )", "acos ( 0 )", "90" },
  { "sin ( 4 5", "sin ( 45", "0.707106781186547" },
  { 
    "cos ( 9 0 ) + 3 3",
    "cos ( 90 ) + 33",
    "33",
  },
  { "acos ( sin ( 9 0 . 0", "acos ( sin ( 90.0", "0" },
  { "1 + sin ( 1 0 * 9 )", "1 + sin ( 10 * 9 )", "2" },
};

const std::vector<testCase_t> autogenCases = {
  {
    "4 3 7 . 2 6 / 5 4 9 . 1 7 / 8 2 1 . 0 0 * 5 9 9 . 2 3",
    "",
    "0.581143435657979",
  },
  {
    "2 5 9 . 2 1 * 4 5 8 . 8 0 / 8 9 9 . 6 7 + ( 5 5 . 9 8 / 1 3 1 . 5 6 )",
    "",
    "132.613475972236",
  },
  {"6 9 1 . 9 2 ^ ( 8 6 6 . 4 1 - 8 7 1 . 0 6 )", "", "6.21928041794196e-14"},
  {"( tan ( ( 5 3 3 . 4 3 * 2 2 . 6 8 ) ) )", "", "0.786707641097451"},
  {"2 8 6 . 2 6 - 9 9 9 . 2 3 - 7 6 5 . 1 3 + 4 3 0 . 3 5", "", "-1047.75"},
  {
    "1 4 3 . 7 2 + ( 1 3 4 . 6 7 ) + sin ( 9 1 3 . 9 1 )",
    "",
    "278.149602539195",
  },
  {"4 6 4 . 9 2 - 3 5 7 . 5 7 * 2 0 0 . 3 6 - 5 1 9 . 8 7", "", "-71697.6752"},
  {"3 5 . 5 5 + 4 4 8 . 0 0 * 1 1 3 . 4 6 * 4 9 2 . 7 0", "", "25044015.966"},
  {
    "4 7 4 . 9 0 ^ 2 4 . 8 1 * 3 7 2 . 0 3 + 3 4 5 . 9 2",
    "",
    "9.48588356436863e+68",
  },
  {"( 4 3 8 . 9 0 ) + sin ( 8 7 9 . 5 0 )", "", "439.250207381259"},
  {
    "5 5 8 . 8 5 - 5 5 9 . 7 2 * 8 8 7 . 1 0 + sin ( tan ( 8 1 7 . 4 6 ) )",
    "",
    "-495968.894895592",
  },
  {
    "6 0 1 . 6 1 - 2 4 5 . 6 2 - 1 0 9 . 0 3 ^ 9 5 . 7 1",
    "",
    "-1.03164152966165e+195",
  },
  {"8 6 4 . 7 2 + 9 8 5 . 8 8 - 4 6 4 . 0 8 + 8 7 2 . 4 6", "", "2258.98"},
  {"6 7 . 7 0 ^ 8 0 . 7 7 / ( 5 5 0 . 9 0 )", "", "1.30489028361247e+145"},
  {"2 0 7 . 6 1 * 2 3 6 . 6 9 * ( 6 6 9 . 4 0 )", "", "32893787.77646"},
  {"( 4 5 8 . 1 8 / tan ( 2 2 3 . 8 4 ) )", "", "477.118471521914"},

  {
    "2 0 2 . 3 6 + 7 6 6 . 1 4 - 9 5 4 . 0 2 + 1 4 6 . 0 5 - 7 8 0 . 7 6 / 3 5 1 . 3 9 - 6 6 . 1 3",
    "",
    "92.1780813341302",
  },
  {
    "( 7 4 0 . 3 1 ) * 9 3 3 . 2 8 * ( sin ( cos ( 6 1 6 . 3 9 / sqrt ( 1 5 2 . 7 8 ) ) ) )",
    "",
    "7772.31694026474",
  },
  {
    "8 5 9 . 7 1 * 7 5 5 . 3 8 / 3 6 9 . 8 5 / tan ( 3 2 1 . 8 6 / ( 4 0 1 . 4 6 / sin ( sqrt ( sqrt ( 9 9 3 . 9 2 ) ) ) ) )",
    "",
    "1282536.09145323",
  },
  {
    "3 4 2 . 8 8 * sqrt ( 1 8 7 . 1 2 - 7 3 4 . 8 2 / 5 4 6 . 1 4 + cos ( 2 5 4 . 2 5 / 9 2 4 . 9 0 ) )",
    "",
    "4685.98566554374",
  },
  {
    "8 6 7 . 0 6 * 3 3 3 . 0 7 + 7 8 0 . 7 2 / 8 3 1 . 2 9 / 5 6 3 . 0 3 + 3 7 0 . 6 1 / tan ( sin ( sin ( 6 8 1 . 0 2 ) ) )",
    "",
    "-1645342.45143036",
  },
  {
    "3 8 . 1 7 * 7 1 . 3 3 - 1 7 6 . 0 3 / 3 9 0 . 8 0 - 6 3 . 5 4 + 7 5 5 . 6 1 - 9 4 7 . 7 3",
    "",
    "2466.55566499488",
  },
  {
    "1 1 2 . 8 8 - 3 4 7 . 4 2 + sin ( cos ( 7 6 0 . 9 9 ) ) - 1 8 6 . 2 6 + 4 1 5 . 3 2",
    "",
    "-5.46682621573774",
  },
  {
    "5 0 2 . 0 7 / ( ( 9 5 3 . 3 0 - 9 3 2 . 3 9 / 1 1 9 . 2 0 ) ) / 3 . 1 1",
    "",
    "0.170746765045732",
  },
  {
    "6 4 1 . 1 6 / 4 6 6 . 2 6 - 7 4 3 . 8 5 + 6 9 1 . 5 4 ^ cos ( ( 8 7 5 . 9 1 - 9 0 . 0 0 ) )",
    "",
    "-728.049368255496",
  },
  {
    "5 4 7 . 6 5 ^ 5 2 . 6 7 ^ 9 9 . 9 5 ^ sin ( 6 8 7 . 3 7 - 8 8 9 . 3 0 / 1 3 7 . 9 3 )",
    "",
    "0",
  },

  {
    "7 7 4 . 5 6 - sin ( 2 0 6 . 2 0 ) / 1 5 6 . 3 4 / sqrt ( 5 6 9 . 8 7 - 5 2 8 . 6 4 )",
    "",
    "774.560439804522",
  },
  {
    "( 1 4 5 . 1 9 ) + sin ( 8 9 6 . 1 1 - 5 3 1 . 6 8 - ( 7 6 7 . 9 5 ) )",
    "",
    "144.501392262827",
  },
  {
    "9 8 6 . 5 5 * sin ( 9 6 1 . 3 7 - ( 1 4 2 . 2 2 ) / 4 0 1 . 5 6 ^ sqrt ( ( sin ( tan ( 2 4 2 . 0 6 ) ) ) ) )",
    "",
    "-229.187708938971",
  },
  {
    "9 9 0 . 1 4 * 2 9 0 . 2 5 - tan ( 3 6 7 . 8 8 + ( tan ( sqrt ( 4 1 1 . 2 1 - 2 7 3 . 4 7 ) ) ) )",
    "",
    "287387.992897046",
  },
  {
    "1 4 3 . 1 5 - 2 7 1 . 1 7 + 1 6 . 2 8 + tan ( 2 6 7 . 1 4 ) * 4 3 6 . 9 3 * ( 2 2 9 . 9 0 )",
    "",
    "2010584.76200168",
  },

  {
    "3 0 2 . 8 6 / sqrt ( 9 8 8 . 8 9 * 1 8 . 4 9 / sqrt ( 2 0 1 . 4 6 / 6 5 8 . 5 7 ) )",
    "",
    "1.66569772054666",
  },
  {
    "2 7 1 . 2 9 + 4 0 9 . 1 1 * 7 8 . 0 1 - tan ( 2 8 . 8 4 / 1 0 8 . 7 9 ^ 2 4 . 3 9 )",
    "",
    "32185.9611",
  },
  {
    "( 4 7 4 . 6 9 ) * 6 1 5 . 5 0 * 5 5 0 . 3 6 * ( 2 3 4 . 8 7 * 6 8 6 . 5 4 )",
    "",
    "25928559855954.3",
  },
  {
    "( 8 8 1 . 7 2 ) - cos ( 4 0 4 . 4 9 - tan ( tan ( 9 0 1 . 3 6 + 3 9 . 5 8 ) ) )",
    "",
    "881.006442065117",
  },
  {
    "( 8 7 7 . 1 3 / 3 0 5 . 2 7 ) + ( 1 8 . 8 1 * ( 5 9 6 . 1 7 ) )",
    "",
    "11216.8309924952",
  },
  {
    "4 5 0 . 5 5 * sqrt ( cos ( 7 1 8 . 2 7 + 6 7 2 . 9 8 ) * 2 0 2 . 4 8 ) / 2 6 6 . 5 7",
    "",
    "19.5289734569743",
  },
  {
    "2 0 3 . 4 9 + sin ( cos ( 9 1 5 . 3 8 ) ) * 3 4 9 . 9 9 * 9 3 4 . 5 0 + 2 7 5 . 2 7",
    "",
    "-5024.92477881102",
  },
  {
    "7 9 5 . 7 1 - 7 4 8 . 7 2 - 4 9 3 . 9 3 / 1 3 7 . 0 8 - 7 9 5 . 4 8 / 7 2 9 . 8 0 / 1 5 4 . 7 4",
    "",
    "43.3797315492656",
  },
  {
    "3 4 . 7 7 - cos ( 1 6 9 . 4 3 + ( 7 3 6 . 8 5 ) ^ ( sqrt ( 7 3 2 . 4 2 ) ) )",
    "",
    "35.7396449929953",
  },
  {
    "5 7 6 . 9 0 + 9 0 . 5 6 + 7 6 . 1 2 / sin ( 4 5 . 6 5 - sqrt ( 6 5 0 . 7 1 ) )",
    "",
    "888.526156627063",
  },
  {
    "tan ( 5 4 5 . 0 5 / 1 0 . 6 6 / 2 1 4 . 4 2 - 7 9 0 . 2 4 - 2 8 . 4 0 + 7 7 8 . 9 4 )",
    "",
    "-0.823209645405611",
  },
  {
    "8 2 0 . 0 2 + cos ( 5 6 6 . 8 7 ) / 8 1 0 . 3 8 * 9 5 . 9 8 - 6 2 4 . 6 3 - sin ( 6 6 1 . 3 5 )",
    "",
    "196.138354145193",
  },
  {
    "1 1 2 . 8 5 - 6 9 5 . 2 9 + 4 7 1 . 3 8 - 3 2 6 . 7 4 * 2 5 3 . 6 6 * 1 5 5 . 4 7 - 5 9 3 . 6 8",
    "",
    "-12886193.350148",
  },
  {
    "3 2 1 . 8 1 - 6 2 1 . 0 4 - cos ( 8 0 5 . 7 1 + 8 8 6 . 1 5 ) / ( 9 5 7 . 8 1 )",
    "",
    "-299.229674946034",
  },
  {
    "9 7 3 . 6 7 - 5 4 2 . 3 3 - ( 6 6 . 0 3 * 7 1 2 . 9 2 ) - 6 1 3 . 6 1 / 4 6 4 . 0 3",
    "",
    "-46644.0899498481",
  },
  {
    "2 3 6 . 2 5 ^ sin ( 5 2 0 . 9 7 - 3 8 0 . 7 3 ^ 3 2 . 4 4 / tan ( 4 9 4 . 0 6 * 9 3 3 . 2 7 ) )",
    "",
    "22.2303543759534",
  },
  {
    "8 5 8 . 3 4 / 6 8 3 . 8 6 ^ 3 . 7 7 + ( ( 4 2 4 . 3 3 / 3 2 1 . 8 0 * 6 9 7 . 1 7 ) )",
    "",
    "919.298154461367",
  },
  {
    "1 7 2 . 0 9 - 1 8 6 . 3 3 / tan ( 7 7 3 . 5 3 - 9 5 9 . 5 4 / tan ( 1 5 2 . 5 7 * cos ( 5 1 . 9 0 ) ) )",
    "",
    "293.1109029608",
  },
  {
    "sqrt ( cos ( 4 7 . 7 4 ) ) * 5 0 4 . 2 2 * 3 0 4 . 8 7 * tan ( cos ( 9 6 9 . 6 8 ) )",
    "",
    "-764.048321169234",
  },
  {
    "tan ( 4 2 0 . 1 2 + 2 7 5 . 7 5 ^ 5 . 4 4 ) + 7 8 0 . 5 3 + ( 8 4 . 9 3 )",
    "",
    "865.279146384566",
  },
  {
    "6 6 6 . 7 2 * ( 6 5 2 . 6 5 * 1 9 0 . 2 0 + 9 9 3 . 5 4 * ( 2 4 9 . 9 8 / ( ( 1 0 8 . 1 0 ) ) ) )",
    "",
    "84294462.8584753",
  },
  {
    "5 0 2 . 5 9 / cos ( 9 3 1 . 6 5 * 9 8 2 . 6 6 * sin ( 3 7 9 . 4 9 / sqrt ( 4 6 4 . 9 8 ) ) )",
    "",
    "656.15743178987",
  },

  {
    "3 2 7 . 5 8 / ( 7 4 3 . 4 8 / sqrt ( 2 4 5 . 6 1 * 9 7 7 . 4 7 ) / 5 4 1 . 0 0 )",
    "",
    "116793.882204055",
  },
  {
    "8 1 8 . 0 2 * sqrt ( 1 0 2 . 4 5 ) - 5 4 3 . 2 9 - ( 5 8 0 . 4 0 / ( tan ( 3 4 7 . 6 1 ) ) )",
    "",
    "10378.5202552045",
  },
  {
    "sin ( 3 3 7 . 9 0 - sqrt ( 3 5 0 . 5 3 - 8 9 3 . 6 8 / 3 8 1 . 9 8 ) - 5 1 3 . 6 5 )",
    "",
    "0.24885657814712",
  },
  {
    "9 4 4 . 2 5 * 3 6 2 . 8 8 ^ cos ( 2 3 6 . 4 1 ) ^ 7 1 . 0 3 + 2 3 5 . 7 7 * 2 5 3 . 9 6",
    "",
    "59876.1492",
  },
  {
    "2 1 5 . 3 9 - 4 4 6 . 1 5 / 4 0 3 . 0 1 - ( 2 8 8 . 4 7 / cos ( 1 0 0 . 3 1 - 7 1 6 . 1 4 ) )",
    "",
    "1392.67467277044",
  },
  {
    "5 2 0 . 1 4 - 8 9 7 . 8 8 + 5 6 2 . 3 8 ^ cos ( cos ( 4 0 2 . 2 2 ) + ( sqrt ( ( tan ( 9 0 6 . 7 6 ) ) ) ) )",
    "",
    "184.00203804361",
  },
  {
    "9 2 7 . 3 7 + ( 1 1 9 . 9 2 ) + 8 6 . 4 3 / 6 2 6 . 3 2 - 5 7 4 . 4 9 / 7 5 6 . 5 7",
    "",
    "1046.66866165828",
  },
  {
    "5 1 8 . 5 5 / cos ( 2 0 4 . 8 0 / ( 5 7 3 . 4 3 - 3 1 0 . 8 2 / 3 5 2 . 4 4 ) )",
    "",
    "518.560105513664",
  },
  {
    "1 4 3 . 2 4 - 5 6 3 . 8 2 / 9 1 3 . 1 4 + 5 3 6 . 5 1 - 3 2 7 . 2 9 + 2 4 8 . 9 0 / 6 0 6 . 3 8",
    "",
    "352.25301681363",
  },
  {
    "2 0 8 . 0 0 / 8 3 2 . 1 5 / 8 4 7 . 6 5 / 1 7 7 . 3 7 + sqrt ( 9 2 6 . 7 6 / 1 0 . 4 8 )",
    "",
    "9.40379332917167",
  },

  {
    "2 5 7 . 5 1 + cos ( 6 5 9 . 5 3 - 8 2 0 . 9 3 ) - 6 3 8 . 3 4 * sqrt ( ( 5 3 4 . 2 8 ) )",
    "",
    "-14498.3461760542",
  },
  {
    "( 3 1 9 . 1 7 / 6 3 9 . 5 9 * 6 1 0 . 2 8 ) / 2 1 8 . 0 6 - 2 3 2 . 0 3 - 7 7 4 . 4 0",
    "",
    "-1005.03339520593",
  },
  {
    "8 9 1 . 8 5 / 4 9 4 . 6 0 * cos ( cos ( 4 2 8 . 8 8 ) / tan ( 7 9 8 . 8 7 ) )",
    "",
    "1.80317290214134",
  },
  {
    "1 2 2 . 9 9 / cos ( sin ( 8 4 8 . 2 8 / 9 9 2 . 6 6 + 9 2 2 . 1 9 * sin ( 9 8 4 . 1 2 ) ) )",
    "",
    "122.991508121272",
  },
  {
    "6 0 . 0 1 * 5 3 9 . 0 2 ^ sin ( 4 5 7 . 1 1 + sqrt ( 9 8 1 . 6 4 - tan ( 9 6 2 . 4 5 ) ) )",
    "",
    "8291.87349255241",
  },
  {
    "6 8 2 . 4 6 - ( tan ( 9 3 8 . 9 8 / 5 8 . 4 1 ) * 6 9 6 . 1 8 / sqrt ( 6 6 5 . 0 6 ) )",
    "",
    "674.680569543925",
  },
  {
    "tan ( ( 5 8 5 . 7 8 * . 8 5 - ( tan ( 6 9 . 6 2 / 1 8 3 . 1 4 + cos ( 8 3 0 . 8 6 ) ) ) ) )",
    "",
    "-0.903170593031186",
  },
  {
    "1 8 7 . 9 2 * 9 4 7 . 8 0 * 3 8 5 . 5 5 ^ 3 . 7 2 ^ ( sin ( ( 8 2 0 . 9 7 ) ) )",
    "",
    "495586234260050",
  },
  {
    "6 2 0 . 4 6 + 1 5 2 . 8 5 * 6 6 4 . 9 6 + tan ( 3 2 9 . 3 8 - 6 7 8 . 7 4 / 3 4 1 . 5 7 )",
    "",
    "102258.956298255",
  },
  {
    "cos ( tan ( 5 4 3 . 4 7 - 7 8 5 . 5 2 + 8 2 4 . 6 8 ) + 5 5 4 . 2 4 ^ 2 . 9 6 )",
    "",
    "0.4502832301224",
  },
  {
    "6 1 0 . 7 2 + 3 9 5 . 3 1 ^ . 3 8 + 9 2 5 . 9 0 - 7 4 1 . 2 3 / 1 2 4 . 4 6 + 9 . 3 0",
    "",
    "1549.66587556897",
  },
  {
    "( 5 8 5 . 5 6 ) / 1 6 0 . 5 8 / 4 9 9 . 8 1 + cos ( sin ( 1 9 6 . 6 1 ) )",
    "",
    "1.00728338942294",
  },
  {
    "( 5 6 1 . 2 2 ) + 9 9 2 . 2 1 + sin ( ( cos ( 1 0 3 . 3 3 ) + 1 3 2 . 8 0 ) )",
    "",
    "1554.16645800078",
  },
  {
    "cos ( 3 9 7 . 3 1 + 2 0 8 . 5 8 ) / 4 9 4 . 2 3 * cos ( 6 9 6 . 1 4 ) * 7 8 8 . 5 5",
    "",
    "-0.596049598520534",
  },
  {
    "sqrt ( 9 7 6 . 2 0 - 2 0 9 . 9 9 + 5 0 4 . 9 0 * ( 6 5 2 . 3 0 ) / tan ( 2 5 4 . 7 0 ) )",
    "",
    "301.438474529388",
  },
//   {
//     "sqrt ( 3 1 4 . 0 4 - sqrt ( 8 6 7 . 0 9 ) ) ^ 5 6 . 6 3 * sqrt ( 2 3 3 . 5 7 )",
//     "",
//     "4.737982093319765e+70",
//   },
  {
    "sin ( 7 4 9 . 6 0 ) - 7 0 3 . 0 0 * sqrt ( 1 2 0 . 7 5 ) * 5 8 2 . 8 0 - 1 6 2 . 8 4",
    "",
    "-4502296.56145422",
  },
  {
    "3 6 2 . 7 1 ^ 3 5 . 5 1 / 8 2 9 . 8 9 / sqrt ( 8 9 6 . 5 6 ) + ( 3 6 7 . 3 1 )",
    "",
    "3.123551538381e+86",
  },
  {
    "6 9 . 1 5 - 9 1 7 . 1 5 + 9 4 5 . 2 6 - 6 9 1 . 4 6 * 6 1 4 . 9 8 * 1 4 6 . 2 3 - 7 7 0 . 0 6",
    "",
    "-62182650.973084",
  },
  {
    "7 4 . 4 0 - 8 1 0 . 3 5 * tan ( 2 3 9 . 4 2 ) - 8 8 2 . 6 7 / cos ( 2 3 1 . 1 7 )",
    "",
    "110.821394185894",
  },
  {
    "( cos ( 6 9 8 . 9 6 ) + sqrt ( 9 4 5 . 9 2 * 1 9 1 . 1 6 + ( 8 0 1 . 5 3 ) ) )",
    "",
    "427.106530951634",
  },
  {
    "( 9 9 9 . 9 3 ) + cos ( 5 0 2 . 6 4 * cos ( tan ( 6 9 9 . 4 3 * 8 0 2 . 4 9 ) ) )",
    "",
    "999.136006651372",
  },
  {
    "7 2 2 . 2 6 + cos ( 6 3 0 . 9 6 + 3 9 7 . 6 8 ^ 4 3 . 8 9 - 6 3 . 5 7 ) + 7 4 3 . 5 1",
    "",
    "1466.54694710457",
  },
  {
    "( 2 7 7 . 7 5 ) + 7 1 . 2 5 ^ 2 4 . 6 9 - sin ( 1 3 3 . 5 8 - 7 3 3 . 7 4 )",
    "",
    "5.56235121934627e+45",
  },
  {
    "5 1 3 . 3 1 * ( 5 0 2 . 1 8 + sqrt ( 6 8 7 . 7 7 / tan ( 7 5 7 . 5 0 ) / 8 4 4 . 1 5 ) )",
    "",
    "258302.949563338",
  },
  {
    "tan ( 9 8 5 . 2 6 / 6 4 8 . 3 1 / 6 0 9 . 0 4 / 8 8 0 . 0 1 / 2 2 . 2 5 * cos ( cos ( 2 7 1 . 3 8 ) ) )",
    "",
    "2.22424191593713e-09",
  },
  {
    "4 0 4 . 3 0 - 1 7 3 . 9 2 ^ 1 . 8 6 * 2 1 9 . 6 0 / 9 9 2 . 5 4 / 2 3 7 . 4 3 + 3 6 4 . 4 8",
    "",
    "755.090145104973",
  },
  {
    "( 3 5 3 . 5 5 + ( 1 8 9 . 8 1 - 1 3 2 . 0 6 ^ 3 6 . 9 4 ) ) + 1 6 0 . 6 5",
    "",
    "-2.19427755654336e+78",
  },
  {
    "2 7 7 . 0 3 / tan ( 6 0 0 . 4 0 ) - 6 5 . 8 4 + cos ( sin ( tan ( ( 3 3 3 . 9 0 ) ) ) )",
    "",
    "92.5349433685763",
  },
  {
    "7 2 8 . 5 9 / 1 6 3 . 0 7 / 4 2 0 . 7 7 * 5 6 3 . 7 2 ^ sin ( ( 3 0 1 . 1 9 * 2 6 2 . 0 4 ) )",
    "",
    "5.77004959911392",
  },
  {
    "2 3 6 . 8 5 / 3 4 8 . 5 5 ^ sqrt ( 3 4 9 . 7 5 ) ^ cos ( sin ( 5 9 0 . 6 8 / 8 0 1 . 1 8 ) )",
    "",
    "6.76143900395485e-46",
  },
  {
    "cos ( 9 3 1 . 0 4 + 2 4 6 . 0 6 - 4 0 2 . 3 9 + 5 0 5 . 3 4 ) - 1 8 0 . 0 3 * 9 2 2 . 0 2",
    "",
    "-165992.199993794",
  },
  {
    "( 4 2 6 . 2 6 - tan ( cos ( 4 6 7 . 9 1 ) * 1 4 . 9 5 + 5 7 3 . 6 2 ) )",
    "",
    "425.705176663332",
  },
  {
    "8 9 7 . 6 0 - 9 6 5 . 9 1 / sin ( 6 1 4 . 0 7 ) * 3 7 7 . 4 6 + 9 2 5 . 3 7 * tan ( 8 9 1 . 4 3 )",
    "",
    "379910.858797815",
  },
  {
    "7 5 1 . 1 6 + sin ( 4 4 3 . 9 2 / 9 6 4 . 1 1 / 4 7 8 . 9 4 ) ^ 8 8 . 3 7 + 1 6 6 . 0 2",
    "",
    "917.18",
  },
  {
    "5 1 3 . 9 3 / ( 9 0 1 . 9 0 ) + 1 3 0 . 5 5 - 4 9 8 . 2 3 - 8 1 1 . 4 4 * 2 1 4 . 2 7",
    "",
    "-174234.358969642",
  },
  {
    "8 1 7 . 0 6 * 9 4 8 . 2 2 / 4 5 6 . 5 8 ^ sqrt ( 9 2 7 . 4 1 + tan ( 7 2 9 . 5 0 * 4 4 2 . 1 3 ) )",
    "",
    "8.30364200200101e-76",
  },
  {
    "7 8 7 . 4 5 * 1 7 1 . 3 8 / 1 6 7 . 1 2 ^ 1 8 . 3 3 ^ 5 5 . 8 9 - 8 5 1 . 9 7 + sin ( ( tan ( sin ( 3 0 8 . 8 8 ) ) ) )",
    "",
    "-851.970237147768",
  },
  {
    "( ( 4 5 3 . 5 5 - 1 3 2 . 4 7 ) + tan ( 2 9 9 . 8 1 ) + 7 2 0 . 2 7 )",
    "",
    "1039.60460801351",
  },
  {
    "5 4 2 . 4 0 + sin ( 7 2 6 . 0 3 ) * 9 5 0 . 0 6 + sqrt ( 1 6 8 . 6 4 * 6 5 1 . 0 7 )",
    "",
    "973.558489272157",
  },
  {
    "sin ( 1 4 9 . 8 1 - 7 6 1 . 0 7 + 5 9 6 . 1 2 / 3 6 1 . 6 7 ) / 2 8 6 . 8 4 + 2 3 0 . 1 0",
    "",
    "230.103267861864",
  },
  {
    "4 8 1 . 6 7 + 1 1 5 . 8 7 + tan ( sin ( 1 4 4 . 9 0 * 7 3 5 . 6 6 ) + cos ( sqrt ( 8 2 . 9 7 ) ) )",
    "",
    "597.567776562894",
  },
  {
    "7 7 5 . 4 9 + 5 4 . 1 8 + 7 2 8 . 2 3 * sin ( 3 7 7 . 0 4 + 1 1 9 . 0 9 ) * 1 1 2 . 0 3",
    "",
    "57369.1045915873",
  },
  {
    "2 1 9 . 9 4 * 4 9 3 . 5 4 + 4 2 4 . 6 8 - ( 3 7 2 . 4 9 + ( 7 2 0 . 8 1 * 4 2 0 . 5 8 ) )",
    "",
    "-194556.8922",
  },
  {
    "4 0 4 . 8 7 ^ cos ( ( 5 1 2 . 1 4 - 8 4 7 . 7 2 + 7 7 0 . 9 8 / 5 3 7 . 9 7 ) )",
    "",
    "222.004574229191",
  },
  {
    "sin ( 5 3 0 . 4 0 - 6 3 7 . 9 9 / 5 7 9 . 1 8 * 5 6 3 . 4 4 ) * 2 8 3 . 2 9 * tan ( 7 9 4 . 0 6 )",
    "",
    "-991.859040592158",
  },
  {
    "5 5 2 . 1 4 / 7 5 7 . 7 3 / 9 2 2 . 0 6 + 4 2 0 . 7 4 - 8 6 0 . 5 6 ^ 1 . 9 9 + 7 5 9 . 1 1",
    "",
    "-690992.902444042",
  },
  {
    "2 2 1 . 2 0 - ( sqrt ( 2 2 0 . 9 5 + 4 1 6 . 1 2 / 3 4 1 . 7 4 ) + 9 9 0 . 7 2 )",
    "",
    "-784.425289357999",
  },
  {
    "cos ( 2 4 1 . 9 8 ) * 2 9 9 . 0 8 / 8 8 7 . 1 6 / sin ( 4 3 9 . 5 5 + 6 5 3 . 0 4 )",
    "",
    "-0.72656953629227",
  },
  {
    "( 6 4 0 . 2 8 * 5 5 7 . 8 7 ) ^ 7 . 4 6 + 1 0 4 . 5 2 + 4 5 . 1 7 - 3 5 3 . 7 9",
    "",
    "2.65861811762735e+41",
  },
  {
    "4 9 4 . 0 8 * ( ( sqrt ( 8 6 8 . 3 3 - cos ( 1 0 2 . 0 5 * 7 5 7 . 5 6 ^ 9 2 . 9 8 ) ) ) )",
    "",
    "14564.7721862157",
  },
  {
    "tan ( 9 9 4 . 6 9 ) + sin ( ( 6 9 9 . 3 1 ) / 2 9 9 . 3 0 ) / 1 9 2 . 2 6",
    "",
    "-12.1890745615289",
  },
  {
    "( ( 5 9 9 . 7 4 / 8 1 4 . 8 8 + sin ( 8 7 7 . 6 3 ) - 8 0 9 . 8 5 ) )",
    "",
    "-808.733428100434",
  },
  {
    "2 6 8 . 1 3 / 8 6 5 . 8 1 + 5 0 9 . 8 0 - 8 8 5 . 4 8 * 2 0 9 . 6 6 - 2 5 0 . 7 2 / 8 3 2 . 4 8",
    "",
    "-185139.928285518",
  },
  {
    "4 4 3 . 7 5 + ( 1 2 3 . 4 9 ) - 1 9 1 . 5 4 + 6 9 7 . 9 2 - cos ( 1 9 0 . 4 8 )",
    "",
    "1074.60331845986",
  },
  {
    "( 7 7 4 . 8 9 ) / tan ( 1 7 4 . 6 0 / 3 4 2 . 7 5 ) / 1 9 . 8 8 / tan ( 8 5 6 . 4 9 )",
    "",
    "-4618.13142985587",
  },
  {
    "( 7 4 8 . 6 9 + sqrt ( 7 8 8 . 1 3 * 9 3 . 8 9 - 9 6 8 . 7 2 * 6 9 8 . 0 7 ^ cos ( 8 8 6 . 4 2 ) ) )",
    "",
    "1020.71179912085",
  },
  {
    "1 2 9 . 8 9 + 7 9 3 . 7 4 ^ 1 . 2 2 + 2 2 7 . 1 2 - cos ( 1 6 7 . 7 9 + 6 5 . 6 3 )",
    "",
    "3805.92534519839",
  },
  {
    "9 5 3 . 7 7 + 1 1 9 . 8 7 * 6 9 7 . 0 2 + sqrt ( 6 6 1 . 1 2 + 7 8 0 . 6 5 * 9 4 8 . 6 6 )",
    "",
    "85366.5060331948",
  },
  {
    "1 2 3 . 9 9 ^ 4 3 . 8 6 - 2 8 5 . 8 6 / 6 9 0 . 2 7 ^ 7 . 4 5 / sin ( 3 0 1 . 9 5 )",
    "",
    "6.54544092669711e+91",
  },
  {
    "6 5 2 . 8 7 * 4 8 3 . 5 9 + 6 5 1 . 7 0 / 7 6 4 . 1 3 ^ ( 6 0 7 . 7 4 + 1 5 2 . 9 7 )",
    "",
    "315721.4033",
  },
  {
    "6 4 9 . 2 3 + 7 9 9 . 2 9 - 9 2 4 . 2 3 / sqrt ( 1 3 4 . 5 2 + tan ( 4 2 8 . 5 7 * 4 2 4 . 9 3 ) )",
    "",
    "1368.50506168918",
  },
  {
    "cos ( 2 3 8 . 0 8 * 7 8 9 . 4 1 / cos ( 7 4 8 . 3 1 / 7 1 7 . 9 3 + 7 7 9 . 9 5 ) )",
    "",
    "-0.872956650447993",
  },
  {
    "tan ( tan ( sin ( 8 0 7 . 7 9 * 2 6 4 . 8 8 - 5 6 . 6 7 ) + 9 1 7 . 6 5 ^ 5 3 . 9 9 ) )",
    "",
    "0.00275019625149979",
  },
  {
    "5 2 2 . 3 9 * 8 9 2 . 2 1 / 9 6 6 . 6 4 - 6 9 . 6 6 + 1 1 0 . 8 4 * 6 0 . 9 2 / tan ( 6 7 1 . 1 4 )",
    "",
    "-5486.2700832495",
  },
  {
    "5 7 5 . 0 9 / 3 2 7 . 0 6 - 2 6 4 . 7 6 + 2 5 9 . 3 2 ^ 3 5 . 0 8 + 3 2 4 . 0 3 * sqrt ( 9 3 1 . 5 3 )",
    "",
    "4.75737442589551e+84",
  },
  {
    "3 2 0 . 4 9 - 5 0 7 . 3 7 / 8 4 5 . 2 1 ^ ( 8 6 . 2 8 ) + 8 8 6 . 5 9 - 9 1 3 . 8 9",
    "",
    "293.19",
  },
  {
    "( 5 8 3 . 9 1 + 5 6 5 . 7 5 ) - 4 1 0 . 6 8 * tan ( cos ( 6 4 2 . 3 1 * 4 4 6 . 9 7 ) )",
    "",
    "1156.77949061206",
  },

  {"8 * 8 - 3 + ( 2 ) / 1 * 8 + 8 ^ 3", "", "589"},
  {"3 + 2 * 6 ^ 2 - 3 ^ 5 + 6 + 3 * 3", "", "-153"},
  {"2 / 8 / 1 + 8 + 2 + 1 ^ ( 5 - ( 4 ) )", "", "11.25"},
  {"4 * ( 7 * ( 1 ) ) * 3 / 7 * 3 ^ 7", "", "26244"},
  {"3 / 7 + 3 * 6 * 5 * 2 + 3 / 9 + ( 3 )", "", "183.761904761905"},
  {"3 / 3 * 1 ^ 5 / 3 - ( 5 + 7 / 9 )", "", "-5.44444444444444"},
  {"2 * ( 5 * 7 * 8 / 4 - 6 - 9 / 4 )", "", "123.5"},
  {"3 - 7 / 1 - 8 / 7 * 6 - ( 7 + ( 9 ) )", "", "-26.8571428571429"},
  {"9 / 4 * 5 / 1 * 2 + 8 - 4 / 7 + 4", "", "33.9285714285714"},
  {"3 ^ 4 ^ 9 / 2 - 4 - 3 + 7 ^ 7 * 2", "", "7.50473176501467e+16"}, // TS: 75047317650146660
  {"3 * 4 + 3 + 6 / 1 * 8 * 9 / 1 ^ 9", "", "447"},
  {"7 / 1 ^ 6 + 3 * 1 - 4 * 5 + 6 / 2", "", "-7"},
  {"3 * 8 - 7 + 9 - 7 / 2 + 8 ^ 7 ^ 2", "", "4398046511126.5"},
  {"8 + 8 - 1 + 8 - ( 5 / 1 * 2 * 3 )", "", "-7"},
  {"9 / 8 - 8 / 1 ^ 9 - 3 - 9 - 7 + 7", "", "-18.875"},
  {"8 + 6 / 4 - 1 + 3 ^ 7 + 4 - 6 / 3", "", "2197.5"},
  {"2 - 8 ^ ( 3 ) - 5 ^ 2 + 5 * 3 + 2", "", "-518"},
  {"6 ^ 8 * 5 + ( 3 + 3 + ( 2 ) / 2 )", "", "8398087"},
  {"5 ^ 5 + 5 * 7 - 8 ^ ( 3 - 6 ) - 1", "", "3158.998046875"},
  {"6 * ( 1 ) - 8 - 8 + 6 / 9 + 1 * 3", "", "-6.33333333333333"},
  {"8 * 4 ^ 3 * 7 ^ ( 6 * 6 / 9 ^ 3 )", "", "563.641805658022"},
  {"3 + 5 / 6 * 9 ^ 3 - 3 + 5 - 9 / 6", "", "611"},
  {"5 + 7 * 2 / 7 * ( 6 - 4 - 1 / 8 )", "", "8.75"},
  {"4 / 3 + 6 + 1 - 7 - 4 - 7 ^ 8 - 6", "", "-5764809.66666667"},
  {"4 * 8 * 3 ^ 3 + ( 5 ) - 9 + 8 / 4", "", "862"},
  {"6 / 8 + 1 / 9 + 7 / 4 - 7 ^ 2 - 3", "", "-49.3888888888889"},
  {"8 / 4 / 2 * 9 ^ 3 / 3 * 2 * 7 / 6", "", "567"},
  {"9 / 2 / 3 * 3 + 3 / 3 / 6 + 3 / 8", "", "5.04166666666667"},
  {"6 + 2 ^ 3 - 6 * 5 + 7 - ( 1 * 5 )", "", "-14"},
  {"3 / 1 ^ 9 * ( 9 + 3 + 9 * 3 ^ 1 )", "", "117"},
  {"4 ^ 8 ^ 1 + 7 * 4 * 6 * ( 9 + 5 )", "", "67888"},
  {"3 + 6 - 6 * 7 ^ ( 2 ) / ( 4 ) / ( 3 )", "", "-15.5"},
  {"3 + 4 + 6 * 1 + 2 ^ 7 / 7 * 9 / 3", "", "67.8571428571429"},
  {"7 * 8 - 6 - 3 / 6 ^ 6 ^ 8 + 7 * 9", "", "113"},
  {"2 + 4 ^ 1 - 8 / 3 / ( 8 * 2 + 5 )", "", "5.87301587301587"},
  {"6 * 1 + 7 - 4 - 3 * 4 ^ 6 ^ 3 + 9", "", "-206158430190"},
  {"7 / 5 * 5 * 1 + ( ( 5 ) * 4 ^ 5 )", "", "5127"},
  {"7 * 1 - 5 - 6 * ( 3 / 8 / 5 ) ^ 3", "", "1.99746875"},
  {"9 - 7 * 1 * 6 ^ 3 + 2 ^ 9 / 2 + 3", "", "-1244"},
  {"4 * 6 - 3 * 1 ^ 7 * 5 / 9 - 1 ^ 5", "", "21.3333333333333"},
  {"8 * 3 - 7 + 3 * 6 ^ 6 / ( 3 - 8 )", "", "-27976.6"},
  {"5 * 2 / 2 * 1 - 6 - 8 - ( 5 + 6 )", "", "-20"},
  {"3 - 8 - 7 ^ 8 / 2 / 6 + 6 ^ 1 * 3", "", "-480387.083333333"},
  {"1 ^ 3 / 3 + 8 + 1 ^ 6 * 3 - 6 + 1", "", "6.33333333333333"},
  {"6 * ( 8 / 5 ^ ( 3 - 1 + 3 * 3 ) )", "", "9.8304e-07"},
  {"1 / 6 / 1 + 8 + 1 ^ 3 ^ 7 + 5 - 2", "", "12.1666666666667"},
  {"6 ^ 8 * 7 + 3 ^ 8 * 1 ^ 4 + 8 / 4", "", "11763875"},
  {"5 + 6 / 8 - 3 - 3 * 3 / 2 / 9 + 3", "", "5.25"},
  {"3 * 3 / 9 ^ 4 + 3 * 5 + 8 - 2 * 9", "", "5.00137174211248"},
  {"9 / 4 * 6 - 1 - 3 / 9 ^ 1 / 4 ^ 2", "", "12.4791666666667"},
  {"9 + 6 + 6 ^ ( ( 9 + 1 - 3 * 9 ) )", "", "15.0000000000001"},
  {"9 ^ 4 ^ 3 - 4 / 1 + 2 / 3 ^ 6 - 4", "", "282429536473.003"},
  {"1 / 2 ^ 9 ^ 8 + 8 + 3 ^ 3 / 8 / 6", "", "8.5625"},
  {"5 * 5 / 2 + 8 / 8 * 1 + 3 * 9 * 3", "", "94.5"},
  {"1 + 5 / 3 - ( ( 3 / 8 - 3 + 8 + 2 ) )", "", "-4.70833333333333"},
  {"4 * 1 + 1 ^ 7 / 1 * 5 - 9 / 5 * 7", "", "-3.6"},
  {"3 / 7 * 8 / 6 - 3 ^ 6 - 2 - 7 / 3", "", "-732.761904761905"},
  {"7 - 6 - 6 + 6 - 9 - 3 * ( 5 + ( ( 7 ) ) )", "", "-44"},
  {"8 - 2 * 8 - 9 / 7 - 3 ^ 6 * ( 7 )", "", "-5112.28571428571"},
  {"8 * 7 + 3 * 9 + 7 * 9 * 2 / 6 * 8", "", "251"},
  {"6 + ( 4 - 7 + 7 ) - 5 ^ 3 - 6 * 9", "", "-169"},
  {"( 9 * 9 ) ^ 1 - 3 / 8 ^ 3 ^ 9 * 8", "", "81"},
  {"6 ^ ( 7 ) * ( ( 1 ) ) * 3 / 2 * 4", "", "1679616"},
  {"6 - 1 ^ 1 - 6 / 7 ^ 5 + 3 ^ 2 + 1", "", "14.9996430058904"},
  {"9 / 6 ^ 2 * 1 - 3 * ( 2 - 5 ) / 3", "", "3.25"},
  {"9 + 2 * 7 / 4 - 8 + 6 / 8 + 5 ^ 2", "", "30.25"},
  {"8 - 8 + 4 / ( 2 / 3 / 2 + 3 + 9 )", "", "0.324324324324324"},
  {"4 * 3 / 3 ^ ( 6 - ( 2 ) ) * 6 / 2", "", "0.444444444444444"},
  {"( 5 - 2 - 2 - 3 / 6 ^ 3 ) ^ 4 - 7", "", "-6.05440882767252"},
  {"8 * 6 + 3 + ( 5 * 3 ^ 5 ) * 3 ^ 4", "", "98466"},
  {"5 / 5 + ( 5 * 3 * 4 + 3 ^ 9 * 4 )", "", "78793"},
  {"3 ^ 6 * 9 / 9 * 3 * 6 / 3 - 4 * ( 6 )", "", "4350"},
  {"5 * 3 / 8 + 3 ^ 6 ^ 6 + 4 + 4 / 1", "", "1.50094635296999e+17"},
  {"4 ^ ( 6 ) + 9 + 1 * 1 * 5 ^ 3 ^ 9", "", "7.45058059692383e+18"},
  {"6 * 1 ^ 1 * 1 ^ 3 + 7 / 2 ^ 9 ^ 4", "", "6.00000000010186"},
  {"8 * 7 * 5 * 6 / 4 * 3 ^ 5 ^ 6 / 6", "", "1.44123792466254e+16"},
  {"4 ^ 8 * 8 * 9 * 4 - 5 - 8 - 6 * 3", "", "18874337"},
  {"2 + ( 5 ) + 8 + ( 3 * 6 + 2 ) - 3", "", "32"},
  {"7 / 6 / 3 ^ 8 ^ ( 5 * 8 + 7 ) / 7", "", "6.67201440105066e-181"},
  {"6 * 3 - 5 * 3 * 4 / 1 - ( 8 / 3 )", "", "-44.6666666666667"},
  {"4 ^ 6 / 2 + 5 - 6 / 4 + 4 + 5 + 7", "", "2067.5"},
  {"3 + ( 8 ) ^ 2 + 1 + 7 * 9 * 3 - 6", "", "251"},
  {"8 * 8 / 3 * 3 ^ ( 6 - 3 ^ 8 ) * 8", "", "0"},
  {"9 * 2 - 7 * 6 ^ ( 5 / 8 ^ 2 ) + 6", "", "15.9482347138991"},
  {"1 * 6 + 7 ^ 6 + 5 + 1 + 3 - 5 - 5", "", "117654"},
  {"3 + 7 + 2 ^ 7 * 6 + 2 * 4 / 1 + ( 1 )", "", "787"},
  {"3 - 1 / 1 - 7 * 2 * 9 / ( 6 ) - 1", "", "-20"},
  {"4 * ( 3 - 7 / 4 ) + 1 - 5 ^ 6 ^ 6", "", "-1.45519152283669e+25"},
  {"1 - 5 - 8 * 8 * 7 - 4 + 2 ^ 3 * 9", "", "-384"},
  {"3 * ( 6 + 6 / 6 ^ 3 ) + 4 * 4 * 5", "", "98.0833333333333"},
  {"6 / 7 + 6 - 1 / 5 / 4 ^ 3 - 8 / 9", "", "5.96512896825397"},
  {"( 6 ) * 8 / 7 / 7 / 3 ^ 5 - 5 * 3", "", "-14.9959687578735"},
  {"3 + 5 - 9 ^ 8 / 3 - 3 + 5 * 3 ^ 4", "", "-14348497"},
  {"1 / 9 / 1 - 4 ^ 8 * ( 1 / 3 ) + 6", "", "-21839.2222222222"},
  {"3 ^ ( 1 - 5 / 7 ) ^ 3 - 5 - 1 + 6", "", "2.56425419972146"},
  {"6 - 9 * ( 6 ) - ( 2 - 3 ^ 4 ) - 4", "", "27"},
  {"( 9 * 7 / 1 - 7 ) * 7 ^ 8 * 2 * 6", "", "3873946272"},
  {"1 * 8 + 2 + 6 * 8 * ( 4 + 5 ^ 2 )", "", "1402"},
  {"7 - 7 * 6 * 7 + 4 - 2 + 1 - ( 1 )", "", "-285"},
  {"1 ^ 8 / 8 + 1 ^ 1 ^ 5 / 1 * 9 / 5", "", "1.925"},
};






void runTestCases(const std::vector<testCase_t> &cases, int& pass) {
    CCalculate testCalc;
    ICalcOptions options = {
        .trigRad = true,
        .deciSep = 0x00,
        .thouSep = 0x00
    };

    // for (testCase_t t : numberCases) {
    // for (testCase_t t : fractionCases) {
    for (testCase_t t : cases) {
        std::string chars = std::get<0>(t);
        std::string expect = std::get<2>(t);

        testCalc.reset();
        const char* cc = chars.c_str();

        for (size_t pos = 0, n = chars.length(); pos < n;) {
            size_t next = chars.find(" ", pos);
            if (next == std::string::npos) {
                next = n;
            }
            std::string cmd = chars.substr(pos, next - pos);
            pos = next + 1;

            testCalc.scan(actionFromCmd(cmd));
        }

        testCalc.parseEquation();
        testCalc.evalEquation(options);
        ITokenResultBase* result = testCalc.result();
        bool success =
            (result != nullptr && result->toString(options) == expect) ||
            (result == nullptr && expect == "");


        if (success) {
            pass++;
        } else {
            std::cout << (success ? " ok  " : "FAIL ") << chars << ": ";
            if (result == nullptr) {
                std::cout << "(no result)";
            } else {
                std::cout << result->toString(options) << " (expected " << expect << ")";
            }
            std::cout << std::endl;
        }
    }
}

void runTests() {
    int pass = 0;
    runTestCases(numberCases, pass);
    runTestCases(fractionCases, pass);
    runTestCases(trigCases, pass);
    runTestCases(autogenCases, pass);
    std::cout << pass << " passed" << std::endl;
}
